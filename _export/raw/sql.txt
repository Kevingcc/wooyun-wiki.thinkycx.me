====== SQL注入（SQL Injection） ======


==== 1、相关背景介绍 ====

----
**结构化查询语言（Structured Query Language，缩写：SQL）**，是一种特殊的编程语言，用于数据库中的标准数据查询语言。1986年10月，美国国家标准学会对SQL进行规范后，以此作为关系式数据库管理系统的标准语言（ANSI X3. 135-1986），1987年得到国际标准组织的支持下成为国际标准。不过各种通行的数据库系统在其实践过程中都对SQL规范作了某些编改和扩充。所以，**实际上不同数据库系统之间的SQL不能完全相互通用**。

**SQL注入（SQL Injection）**是一种常见的Web安全漏洞，攻击者利用这个问题，可以访问或修改数据，或者利用潜在的数据库漏洞进行攻击。

==== 2、成因 ====

----
针对SQL注入的攻击行为可描述为**通过在用户可控参数中注入SQL语法，破坏原有SQL结构，达到编写程序时意料之外结果的攻击行为。**其成因可以归结为以下两个原因叠加造成的：

== 1. 程序编写者在处理应用程序和数据库交互时，使用字符串拼接的方式构造SQL语句 ==
== 2. 未对用户可控参数进行足够的过滤便将参数内容拼接进入到SQL语句中 ==

==== 3、攻击方式和危害 ====

----

这里以MySQL为例。

#### 3.1 攻击方式

SQL注入的攻击方式根据应用程序处理数据库返回内容的不同，可以分为可显注入、报错注入和盲注：

* 可显注入：攻击者可以直接在当前界面内容中获取想要获得的内容
* 报错注入：数据库查询返回结果并没有在页面中显示，但是应用程序将数据库报错信息打印到了页面中，所以攻击者可以构造数据库报错语句，从报错信息中获取想要获得的内容
* 盲注：数据库查询结果无法从直观页面中获取，攻击者通过使用数据库逻辑或使数据库库执行延时等方法获取想要获得的内容

== 3.1.1 可显注入代码示例：==

<code sql>
http://127.0.0.1/sqli-labs-master/Less-1/?id=1' and 1=0 union select 1,email_id,3 from  emails where id=3 --+
</code>

== 3.1.2 报错注入代码示例：==

<code sql>
http://127.0.0.1/sqli-labs-master/Less-1/?id=1' and 1=0 union select 1,count(*),concat((select email_id from emails where id=5),0x2a,floor(rand(0)*2))x from users group by x--+
</code>

== 3.1.3 盲注代码示例：==

<code sql>
http://127.0.0.1/sqli-labs-master/Less-1/?id=1' and (select substr(email_id,1,1) from emails where id=3) > 'a' --+
</code>

#### 3、2 危害

攻击者利用SQL注入漏洞，可以获取数据库中的多种信息（例如：管理员后台密码），从而脱取数据库中内容（脱库）。在特别情况下还可以修改数据库内容或者插入内容到数据库，如果数据库权限分配存在问题，或者数据库本身存在缺陷，那么攻击者可以通过SQL注入漏洞直接获取webshell或者服务器系统权限。

==== 4、实际案例 ====

----

可显注入代码示例：

[[http://www.wooyun.org/bugs/wooyun-2015-0106443|乐视云官方接口泄漏(账户信息接口含密码&SQL注入)]]

报错注入代码示例：

[[http://www.wooyun.org/bugs/wooyun-2015-099907|17173游戏某站点MySQL报错注入(不带逗号注入的猜解过程)]]

盲注代码示例：

[[http://www.wooyun.org/bugs/wooyun-2010-083899|淘宝网某站点存在MySQL注射(附验证脚本)]]

==== 5、修复方案 ====

----

1. 使用参数检查的方式，拦截带有SQL语法的参数传入应用程序

2. 使用预编译的处理方式处理拼接了用户参数的SQL语句

3. 在参数即将进入数据库执行之前，对SQL语句的语义进行完整性检查，确认语义没有发生变化

4. 在出现SQL注入漏洞时，要在出现问题的参数拼接进SQL语句前进行过滤或者校验，不要依赖程序最开始处防护代码

5. 定期审计数据库执行日志，查看是否存在应用程序正常逻辑之外的SQL语句执行

==== 6、漏洞扫描与发现 ====

----

sqlmap 官方站点: http://sqlmap.org/


介绍和使用：

[[http://drops.wooyun.org/tips/143| sqlmap用户手册]]

[[http://drops.wooyun.org/tips/401| sqlmap用户手册[续]]]

[[http://drops.wooyun.org/tips/5254| SQLMAP进阶使用]]
==== 7、相关其他安全问题 ====

----

无

==== 8、相关资源 ====

----

[[http://www.w3school.com.cn/sql/sql_syntax.asp|w3school：SQL语法系列教程]]

[[http://drops.wooyun.org/tips/123|MySql注入科普]]

[[http://drops.wooyun.org/tips/2078|利用insert，update和delete注入获取数据]]

[[http://drops.wooyun.org/tips/1620|MSSQL注射知识库 v 1.0]]

[[http://drops.wooyun.org/tips/3939|Mongodb注入攻击]]

[[http://drops.wooyun.org/tips/5283|在SQL注入中使用DNS获取数据]]

[[http://drops.wooyun.org/tips/5254|SQLMAP进阶使用]]

